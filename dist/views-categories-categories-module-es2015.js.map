{"version":3,"sources":["./src/app/views/categories/categories.component.ts","./src/app/views/categories/categories.component.html","./src/app/views/categories/categories.module.ts","./src/app/views/categories/categories.component.scss","./node_modules/ng2-search-filter/__ivy_ngcc__/ng2-search-filter.js","./src/app/views/categories/categories-routing.module.ts"],"names":[],"mappings":"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","file":"views-categories-categories-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { Category } from '../../interfaces/response';\nimport { CategoriesService } from '../../services/categories.service';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n categories = []\n public addCategoryForm: FormGroup;\n public submitted = false;\n @ViewChild(\"myModal\") public myModal: ModalDirective;\n\n  constructor(\n    private catgServ : CategoriesService,\n    private fb: FormBuilder\n    ) { }\n\n  ngOnInit(): void {\n    this.getCategories()\n    this.buildForm()\n  }\n\n\n  getCategories(){\n    this.catgServ.getCategories().subscribe((res : Category)=>{\n      console.log('catg...', res)\n      this.categories = res.data;\n    })\n\n  }\n\n  status = false;\n  onChang(e) {\n    if (e.target.value == \"true\") {\n      this.status = true;\n    } else {\n      this.status = false;\n    }\n  }\n  get f() {\n    console.log(\n      \"this.addBrandForm.value.status: \",\n      this.addCategoryForm.value.status\n    );\n    return {\n      ...this.addCategoryForm.value,\n      status: this.status,\n    };\n  }\n  buildForm(): void {\n    this.addCategoryForm = this.fb.group({\n      category : [\"\"],\n      desc: [\"\"],\n      other: [\"\"],\n    });\n  }\n\n\n  submit() {\n    this.submitted = true;\n    this.catgServ.postCategory(this.f).subscribe((resp) =>{\n      this.getCategories()\n    })\n    console.log(this.f);\n  }\n\n  deletCategory(id) {\n    this.catgServ.deleteCategory(id).subscribe((resp)=>{\n      this.getCategories()\n    })\n  }\n  reSet() {\n    this.addCategoryForm.reset();\n  }\n  \n}\n","export default \"<div\\n  bsModal\\n  #myModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header card-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add New category</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"myModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div\\n        class=\\\"modal-body\\\"\\n        id=\\\"medicineAddForm\\\"\\n        [formGroup]=\\\"addCategoryForm\\\"\\n      >\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"date-input\\\">Description</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"date-input\\\"\\n                type=\\\"text\\\"\\n                name=\\\"date-input\\\"\\n                placeholder=\\\"desc\\\"\\n                formControlName=\\\"desc\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"company\\\">Status</label>\\n              <select\\n                id=\\\"select1\\\"\\n                name=\\\"select1\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Select Status\\\"\\n                (change)=\\\"onChang($event)\\\"\\n              >\\n                <option value=\\\"0\\\">Select Status</option>\\n                <option [value]=\\\"true\\\">Available</option>\\n                <option [value]=\\\"false\\\">Not Available</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"company\\\">Category</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"company\\\"\\n                placeholder=\\\"category\\\"\\n                formControlName=\\\"category\\\"\\n              />\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"company\\\">Other</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"other\\\"\\n                formControlName=\\\"other\\\"\\n              />\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button\\n          type=\\\"submit\\\"\\n          class=\\\"btn btn-primary col-md-3\\\"\\n          (click)=\\\"submit()\\\"\\n          type=\\\"submit\\\"\\n          form:submit\\n        >\\n          <i class=\\\"fa fa-dot-circle-o\\\"></i> Add\\n        </button>\\n        <button type=\\\"reset\\\" class=\\\"btn btn-danger col-md-3\\\" (click)=\\\"reSet()\\\">\\n          <i class=\\\"fa fa-ban\\\"></i> Reset\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary col-md-3\\\"\\n          (click)=\\\"myModal.hide()\\\"\\n        >\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<!-- /.modal -->\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <h6>Available Categories</h6>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"header row\\\" style=\\\"margin-bottom: 20px\\\">\\n      <div class=\\\"input-group col-md-3\\\">\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"input1-group2\\\"\\n          name=\\\"input1-group2\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"Search Categories\\\"\\n          [(ngModel)]=\\\"term\\\"\\n        />\\n        <span class=\\\"input-group-append\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-pill\\\">\\n            <i class=\\\"fa fa-search\\\"></i> Search\\n          </button>\\n        </span>\\n      </div>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-pill btn-secondary mr-1 col-md-3\\\"\\n        data-toggle=\\\"modal\\\"\\n        (click)=\\\"myModal.show()\\\"\\n      >\\n        Add New Category\\n      </button>\\n    </div>\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th>S. No.</th>\\n          <th>Category</th>\\n          <th>Description</th>\\n          <th>status</th>\\n          <th>update</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let category of categories |filter:term; let i = index\\\">\\n          <td>{{ i + 1 }}</td>\\n          <td>{{ category?.category }}</td>\\n          <td>{{ category?.desc }}</td>\\n          <td>\\n            <span\\n              class=\\\"badge\\\"\\n              [class.badge-success]=\\\"category?.status\\\"\\n              [class.badge-danger]=\\\"!category?.status\\\"\\n              >{{ category?.status ? \\\"Available\\\" : \\\"NotAvailable\\\" }}</span\\n            >\\n          </td>\\n          <td>\\n            <div class=\\\"update row\\\">\\n              <button class=\\\"btn btn-sm btn-secondary btn-pill\\\">Edit</button>\\n              <button\\n                class=\\\"btn btn-sm btn-danger btn-pill\\\"\\n                (click)=\\\"deletCategory(category._id)\\\"\\n              >\\n                <span class=\\\"cil-trash\\\"></span>\\n              </button>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <ul class=\\\"pagination\\\">\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n      <li class=\\\"page-item active\\\">\\n        <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n      </li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n    </ul>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { CategoriesComponent} from './categories.component';\nimport { CategoriesRoutingModule } from './categories-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n@NgModule({\n  imports: [\n    CategoriesRoutingModule,\n    HttpClientModule,\n    CommonModule,\n    ModalModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2SearchPipeModule\n\n  ],\n  declarations: [ CategoriesComponent ]\n})\nexport class CategoriesModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXRlZ29yaWVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Injectable, NgModule, Pipe } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass Ng2SearchPipe {\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    transform(items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    static filter(items, term) {\n        const /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (let /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNg2SearchPipe.ɵfac = function Ng2SearchPipe_Factory(t) { return new (t || Ng2SearchPipe)(); };\nNg2SearchPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"filter\", type: Ng2SearchPipe, pure: false });\nNg2SearchPipe.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Ng2SearchPipe, factory: Ng2SearchPipe.ɵfac });\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'filter',\n                pure: false\n            }]\n    }, {\n        type: Injectable\n    }], null, null); })();\n\nclass Ng2SearchPipeModule {\n}\nNg2SearchPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: Ng2SearchPipeModule });\nNg2SearchPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function Ng2SearchPipeModule_Factory(t) { return new (t || Ng2SearchPipeModule)(); } });\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SearchPipeModule, { declarations: [Ng2SearchPipe], exports: [Ng2SearchPipe] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n\n//# sourceMappingURL=ng2-search-filter.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoriesComponent } from './categories.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CategoriesComponent,\n    data: {\n      title: 'Category'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriesRoutingModule {}"],"sourceRoot":"webpack:///"}