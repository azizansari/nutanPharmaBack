{"version":3,"sources":["webpack:///src/app/services/orders.service.ts","webpack:///src/app/views/orders/orders.component.ts","webpack:///src/app/views/orders/orders.component.html","webpack:///src/app/views/orders/orders.component.scss","webpack:///src/app/views/orders/orders.module.ts","webpack:///src/app/views/orders/orders-routing.module.ts"],"names":["OrdersService","http","apiUrl","payload","post","get","id","providedIn","OrdersComponent","medServ","orderserv","router","medicines","orders","submitted","subTotal","listId","orderedProduct","localMedicine","orderList","getMedicines","getOrders","setTimeout","console","log","_orderDate","nativeElement","valueAsDate","Date","subscribe","res","data","deleteOrder","resp","e","target","value","medicine","find","med","_id","rate","quantity","val","orderQuantity","isNaN","gstRate","gstAmount","discount","disAmount","gt","grandTotal","paidAmount","brand","batchNo","expiry","pcaking","packing","productName","total","push","length","select1","orderTotal","i","filter","orderitem","formValues","postOrders","orderForm","reset","navigate","then","result","window","open","orderDate","customerName","customerContact","orderedItem","dueAmount","paymentType","paymentMethod","selector","template","OrdersModule","imports","declarations","routes","path","component","title","OrdersRoutingModule","forChild","exports"],"mappings":"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","file":"views-orders-orders-module-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  public apiUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  postOrders(payload){\n    return this.http.post(`${this.apiUrl}api/c/orders/create`, payload);\n  }\n\n  getOrders() {\n    return this.http.get(`${this.apiUrl}api/c/orders`);\n  }\n  deleteOrder(id){\n    return this.http.delete(`${this.apiUrl}api/c/orders/${id}`)\n\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Response } from \"../../interfaces/response\";\nimport { MedicineService } from \"../../services/medicine.service\";\nimport { OrdersService } from \"../../services/orders.service\";\n\n@Component({\n  selector: \"app-orders\",\n  templateUrl: \"./orders.component.html\",\n  styleUrls: [\"./orders.component.scss\"],\n})\nexport class OrdersComponent implements OnInit, OnDestroy {\n  medicines = [];\n  orders = [];\n  public orderForm: FormGroup;\n  public submitted = false;\n  @ViewChild(\"orderDateIN\") _orderDate;\n  constructor(\n    private medServ: MedicineService,\n    private orderserv: OrdersService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.getMedicines();\n    this.getOrders();\n    setTimeout(() => {\n      console.log('this._orderDate: ', this._orderDate);\n      this._orderDate.nativeElement.valueAsDate = new Date();\n    }, 1000);\n  }\n\n  getMedicines() {\n    this.medServ.getMedicines().subscribe((res: Response) => {\n      console.log(\"res: >>>>>>>>>>>>\", res);\n      this.medicines = res.data;\n      console.log(this.medicines);\n    });\n  }\n  getOrders() {\n    this.orderserv.getOrders().subscribe((res: Response) => {\n      this.orders = res.data;\n      console.log(this.orders);\n    });\n  }\n  deleteOrder(id) {\n    this.orderserv.deleteOrder(id).subscribe((resp) => {\n      this.getOrders();\n    });\n  }\n  medicine;\n  rate;\n  quantity;\n  orderQuantity;\n  // total1;\n  subTotal = 0;\n  discount;\n  gstRate;\n  // grandTotal;\n  gstAmount;\n  disAmount;\n  paidAmount;\n  listId = 1;\n  paymentMethod;\n  orderedProduct = [];\n  // gstTotal;\n  orderDate;\n  customerName;\n  customerContact;\n\n  onChange(e) {\n    console.log(e.target.value);\n    this.medicine = this.medicines.find((med) => med._id == e.target.value);\n    console.log(\"this.medicine: \", this.medicine);\n    this.rate = this.medicine.rate;\n    this.quantity = this.medicine.quantity;\n    console.log(this.medicine.rate);\n  }\n\n  get total() {\n    const val = this.rate * this.orderQuantity;\n    return isNaN(val) ? \"\" : val;\n  }\n  get gstTotal() {\n    const val = 0.01 * this.gstRate * this.subTotal;\n    this.gstAmount = isNaN(val) ? \"\" : val;\n    return this.subTotal + this.gstAmount;\n  }\n\n  get grandTotal() {\n    const val = 0.01 * this.discount * this.subTotal;\n    this.disAmount = isNaN(val) ? \"\" : val;\n    const gt = this.subTotal + this.gstAmount - this.disAmount;\n    return gt;\n  }\n\n  get dueAmount() {\n    const val = this.grandTotal - this.paidAmount;\n    return isNaN(val) ? \"\" : val;\n  }\n\n  // onQuant(ev) {\n  //   this.orderQuantity = ev.target.value;\n  //   // this.total = this.rate * this.orderQuantity;\n  // }\n\n  localMedicine = {};\n  orderList = [];\n\n  @ViewChild(\"select1\") select1;\n  onAdd() {\n    this.localMedicine = {\n      brand: this.medicine.brand,\n      batchNo: this.medicine.batchNo,\n      expiry: this.medicine.expiry,\n      pcaking: this.medicine.packing,\n      medicine: this.medicine.productName,\n      rate: this.rate,\n      orderQuantity: this.orderQuantity,\n      total: this.total,\n      id: this.listId,\n    };\n    this.orderList.push(this.localMedicine);\n    console.log(this.orderList);\n    this.rate = \"\";\n    this.quantity = \"\";\n    this.orderQuantity = \"\";\n    this.subTotal =\n      this.subTotal + this.orderList[this.orderList.length - 1].total;\n    console.log(this.subTotal);\n    this.select1.nativeElement.value = \"0\";\n    this.listId = this.listId + 1;\n    this.subTotal = 0;\n    this.orderTotal();\n  }\n\n  orderTotal() {\n    for (let i = 0; i < this.orderList.length; i++) {\n      if (this.orderList[i].total) {\n        this.subTotal = this.subTotal + this.orderList[i].total;\n      }\n    }\n    // this.grandTotal = this.subTotal;\n    // this.gstTotal = this.subTotal;\n  }\n\n  removeItem(id) {\n    this.orderList = this.orderList.filter((orderitem) => id != orderitem.id);\n    this.subTotal = 0;\n    this.orderTotal();\n  }\n\n  submit() {\n    console.log(this.formValues);\n    this.orderserv.postOrders(this.formValues).subscribe((resp) => {\n      this.getOrders();\n    });\n  }\n\n  ngOnDestroy() {}\n\n  reSet() {\n    this.orderForm.reset();\n  }\n\n  toGetPrint(id) {\n    this.router.navigate([]).then((result) => {\n      window.open(`#/orders/${id}`, \"_blank\");\n    });\n  }\n\n  get formValues() {\n    return {\n      orderDate: this.orderDate,\n      customerName: this.customerName,\n      customerContact: this.customerContact,\n      orderedItem: this.orderList,\n      subTotal: this.subTotal,\n      gstRate: this.gstRate,\n      gstAmount: this.gstAmount,\n      discount: this.disAmount,\n      dueAmount: this.dueAmount,\n      paidAmount: this.paidAmount,\n      grandTotal: this.grandTotal,\n      paymentType: this.paymentMethod,\n    };\n  }\n}\n","export default \"<div\\n  bsModal\\n  #largeModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header card-header\\\">\\n        <h4 class=\\\"modal-title\\\">New Order</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"largeModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <label for=\\\"date-input\\\">Order Date</label>\\n            <input\\n              #orderDateIN\\n              class=\\\"form-control\\\"\\n              id=\\\"date-input\\\"\\n              type=\\\"date\\\"\\n              name=\\\"date-input\\\"\\n              placeholder=\\\"date\\\"\\n              [(ngModel)]=\\\"orderDate\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\n          <div class=\\\"form-group col-md-5\\\">\\n            <label for=\\\"cutomerName\\\">Customer Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"Customer Name\\\"\\n              [(ngModel)]=\\\"customerName\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group col-md-5\\\">\\n            <label for=\\\"customerContact\\\">Contact</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"customerContact\\\"\\n              placeholder=\\\"Contact\\\"\\n              [(ngModel)]=\\\"customerContact\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"table\\\" style=\\\"border-bottom: 2px solid grey\\\">\\n          <table class=\\\"table table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th>Product</th>\\n                <th>Rate</th>\\n                <th>Available Quantity</th>\\n                <th>Quantity</th>\\n                <th>Total</th>\\n                <th>Add</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-group\\\">\\n                    <!-- <ng-select\\n                    #select1\\n                    name=\\\"select1\\\" \\n                    class=\\\"form-control\\\"\\n                    (change)=\\\"onChange($event)\\\"\\n                    >\\n                      <ng-option  *ngFor=\\\"let medicine of medicines\\\"  [value]=\\\"medicine?._id\\\">\\n                        {{ medicine?.productName }}\\n                      </ng-option>\\n                   </ng-select> -->\\n\\n                    <select\\n                      #select1\\n                      name=\\\"select1\\\"\\n                      class=\\\"form-control\\\"\\n                      (change)=\\\"onChange($event)\\\"\\n                    >\\n                      <option value=\\\"0\\\">Select Medicine</option>\\n                      <option\\n                        [value]=\\\"medicine?._id\\\"\\n                        *ngFor=\\\"let medicine of medicines\\\"\\n                      >\\n                        {{ medicine?.productName }}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </td>\\n                <td>\\n                  <div class=\\\"form-group\\\">\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      disabled\\n                      [(ngModel)]=\\\"rate\\\"\\n                    />\\n                  </div>\\n                </td>\\n                <td>\\n                  <div class=\\\"form-group\\\">\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      disabled\\n                      [(ngModel)]=\\\"quantity\\\"\\n                    />\\n                  </div>\\n                </td>\\n                <td>\\n                  <div class=\\\"form-group\\\">\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"orderQuantity\\\"\\n                    />\\n                  </div>\\n                </td>\\n                <td>\\n                  <div class=\\\"form-group\\\">\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      disabled\\n                      [(ngModel)]=\\\"total\\\"\\n                    />\\n                  </div>\\n                </td>\\n                <td>\\n                  <Button class=\\\"btn btn-success\\\" (click)=\\\"onAdd()\\\"\\n                    ><span class=\\\"cil-plus\\\"></span\\n                  ></Button>\\n                </td>\\n              </tr>\\n              <tr *ngFor=\\\"let orderitem of orderList\\\">\\n                <td>{{ orderitem?.medicine }}</td>\\n                <td>{{ orderitem?.rate }}</td>\\n                <td></td>\\n                <td>{{ orderitem?.orderQuantity }}</td>\\n                <td>{{ orderitem?.total }}</td>\\n                <td>\\n                  <button\\n                    class=\\\"btn btn-danger\\\"\\n                    (click)=\\\"removeItem(orderitem?.id)\\\"\\n                  >\\n                    <span class=\\\"cil-trash\\\"></span>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"subtotal\\\">Sub Total</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"subtotal\\\"\\n                disabled\\n                [(ngModel)]=\\\"subTotal\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"gst\\\">GST</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"gst\\\"\\n                placeholder=\\\"GST %\\\"\\n                [(ngModel)]=\\\"gstRate\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"total\\\">Total</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"total\\\"\\n                disabled\\n                [(ngModel)]=\\\"gstTotal\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"discount\\\">Discount (in %)</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"discount\\\"\\n                placeholder=\\\"Discount %\\\"\\n                [(ngModel)]=\\\"discount\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"grandtotal\\\">Grand Total</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"grangtotal\\\"\\n                disabled\\n                [(ngModel)]=\\\"grandTotal\\\"\\n              />\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"paidamount\\\">Paid Amount</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"paidamount\\\"\\n                placeholder=\\\"Amount\\\"\\n                [(ngModel)]=\\\"paidAmount\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"dueamount\\\">Due Amount</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"dueamount\\\"\\n                disabled\\n                [(ngModel)]=\\\"dueAmount\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"paymentType\\\">Payment Type</label>\\n              <select\\n                id=\\\"select1\\\"\\n                name=\\\"select1\\\"\\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"paymentMethod\\\"\\n              >\\n                <option value=\\\"0\\\">Please select</option>\\n                <option value=\\\"Cash\\\">Cash</option>\\n                <option value=\\\"Card\\\">Card</option>\\n                <option value=\\\"UPI\\\">UPI</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button\\n          type=\\\"submit\\\"\\n          class=\\\"btn btn-primary col-md-3\\\"\\n          (click)=\\\"submit()\\\"\\n        >\\n          <i class=\\\"fa fa-dot-circle-o\\\"></i> Submit\\n        </button>\\n        <button type=\\\"reset\\\" class=\\\"btn btn-danger col-md-3\\\">\\n          <i class=\\\"fa fa-ban\\\"></i> Reset\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary col-md-3\\\"\\n          (click)=\\\"largeModal.hide()\\\"\\n        >\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<!-- /.modal -->\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <h6>Order datails</h6>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"header row\\\" style=\\\"margin-bottom: 20px\\\">\\n      <div class=\\\"input-group col-md-3\\\">\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"input1-group2\\\"\\n          name=\\\"input1-group2\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"Search Orders\\\"\\n          [(ngModel)]=\\\"term\\\"\\n        />\\n        <span class=\\\"input-group-append\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-pill\\\">\\n            <i class=\\\"fa fa-search\\\"></i> Search\\n          </button>\\n        </span>\\n      </div>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-pill btn-secondary mr-1 col-md-3\\\"\\n        data-toggle=\\\"modal\\\"\\n        (click)=\\\"largeModal.show()\\\"\\n      >\\n        New Order\\n      </button>\\n    </div>\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th>S.No.</th>\\n          <th>Invoice Id</th>\\n          <th>Order Date</th>\\n          <th>Customer Name</th>\\n          <th>Contact</th>\\n          <th>Payment status</th>\\n          <th>update</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let order of orders | filter:term; let i = index\\\">\\n          <td>{{ i + 1 }}</td>\\n          <td>{{order?.invoiceId}}</td>\\n          <td>{{ order?.createdAt | amDateFormat: \\\"DD/MM/YYYY\\\" }}</td>\\n          <td>{{ order?.customerName }}</td>\\n          <td>{{ order?.customerContact }}</td>\\n          <td>{{ order?.paymentType }}</td>\\n          <td>\\n            <div class=\\\"update row\\\">\\n              <button\\n              class=\\\"btn btn-sm btn-secondary btn-pill\\\"\\n              (click)=\\\"toGetPrint(order?._id)\\\"\\n            >\\n              Print\\n            </button>\\n              <button\\n                class=\\\"btn btn-sm btn-danger btn-pill\\\"\\n                (click)=\\\"deleteOrder(order?._id)\\\"\\n              >\\n                <span class=\\\"cil-trash\\\"></span>\\n              </button>\\n\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <ul class=\\\"pagination\\\">\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n      <li class=\\\"page-item active\\\">\\n        <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n      </li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n    </ul>\\n  </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRlcnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule, ViewChild } from '@angular/core';\nimport { OrdersComponent} from './orders.component';\nimport { OrdersRoutingModule } from './orders-routing.module';\nimport { ModalDirective, ModalModule } from 'ngx-bootstrap/modal';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MomentModule } from 'angular2-moment';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n@NgModule({\n  imports: [\n    OrdersRoutingModule,\n    ModalModule,\n    HttpClientModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MomentModule,\n    Ng2SearchPipeModule,\n    NgSelectModule\n\n\n  ],\n  declarations: [ OrdersComponent ]\n})\nexport class OrdersModule { \n  @ViewChild('largeModal') public largeModal: ModalDirective;\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrdersComponent } from './orders.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrdersComponent,\n    data: {\n      title: 'Orders'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrdersRoutingModule {}"]}