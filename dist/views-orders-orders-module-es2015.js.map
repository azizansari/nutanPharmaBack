{"version":3,"sources":["./src/app/services/orders.service.ts","./src/app/views/orders/orders.component.ts","./src/app/views/orders/orders.component.html","./src/app/views/orders/orders.component.scss","./src/app/views/orders/orders.module.ts","./src/app/views/orders/orders-routing.module.ts"],"names":[],"mappings":"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","file":"views-orders-orders-module-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  public apiUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  postOrders(payload){\n    return this.http.post(`${this.apiUrl}api/c/orders/create`, payload);\n  }\n\n  getOrders() {\n    return this.http.get(`${this.apiUrl}api/c/orders`);\n  }\n  deleteOrder(id){\n    return this.http.delete(`${this.apiUrl}api/c/orders/${id}`)\n\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Response } from \"../../interfaces/response\";\nimport { MedicineService } from \"../../services/medicine.service\";\nimport { OrdersService } from \"../../services/orders.service\";\n\n@Component({\n  selector: \"app-orders\",\n  templateUrl: \"./orders.component.html\",\n  styleUrls: [\"./orders.component.scss\"],\n})\nexport class OrdersComponent implements OnInit, OnDestroy {\n  medicines = [];\n  orders = [];\n  public orderForm: FormGroup;\n  public submitted = false;\n  @ViewChild(\"orderDateIN\") _orderDate;\n  constructor(\n    private medServ: MedicineService,\n    private orderserv: OrdersService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.getMedicines();\n    this.getOrders();\n    setTimeout(() => {\n      console.log('this._orderDate: ', this._orderDate);\n      this._orderDate.nativeElement.valueAsDate = new Date();\n    }, 1000);\n  }\n\n  getMedicines() {\n    this.medServ.getMedicines().subscribe((res: Response) => {\n      console.log(\"res: >>>>>>>>>>>>\", res);\n      this.medicines = res.data;\n      console.log(this.medicines);\n    });\n  }\n  getOrders() {\n    this.orderserv.getOrders().subscribe((res: Response) => {\n      this.orders = res.data;\n      console.log(this.orders);\n    });\n  }\n  deleteOrder(id) {\n    this.orderserv.deleteOrder(id).subscribe((resp) => {\n      this.getOrders();\n    });\n  }\n  medicine;\n  rate;\n  quantity;\n  orderQuantity;\n  // total1;\n  subTotal = 0;\n  discount;\n  gstRate;\n  // grandTotal;\n  gstAmount;\n  disAmount;\n  paidAmount;\n  listId = 1;\n  paymentMethod;\n  orderedProduct = [];\n  // gstTotal;\n  orderDate;\n  customerName;\n  customerContact;\n\n  onChange(e) {\n    console.log(e.target.value);\n    this.medicine = this.medicines.find((med) => med._id == e.target.value);\n    console.log(\"this.medicine: \", this.medicine);\n    this.rate = this.medicine.rate;\n    this.quantity = this.medicine.quantity;\n    console.log(this.medicine.rate);\n  }\n\n  get total() {\n    const val = this.rate * this.orderQuantity;\n    return isNaN(val) ? \"\" : val;\n  }\n  get gstTotal() {\n    const val = 0.01 * this.gstRate * this.subTotal;\n    this.gstAmount = isNaN(val) ? \"\" : val;\n    return this.subTotal + this.gstAmount;\n  }\n\n  get grandTotal() {\n    const val = 0.01 * this.discount * this.subTotal;\n    this.disAmount = isNaN(val) ? \"\" : val;\n    const gt = this.subTotal + this.gstAmount - this.disAmount;\n    return gt;\n  }\n\n  get dueAmount() {\n    const val = this.grandTotal - this.paidAmount;\n    return isNaN(val) ? \"\" : val;\n  }\n\n  // onQuant(ev) {\n  //   this.orderQuantity = ev.target.value;\n  //   // this.total = this.rate * this.orderQuantity;\n  // }\n\n  localMedicine = {};\n  orderList = [];\n\n  @ViewChild(\"select1\") select1;\n  onAdd() {\n    this.localMedicine = {\n      brand: this.medicine.brand,\n      batchNo: this.medicine.batchNo,\n      expiry: this.medicine.expiry,\n      pcaking: this.medicine.packing,\n      medicine: this.medicine.productName,\n      rate: this.rate,\n      orderQuantity: this.orderQuantity,\n      total: this.total,\n      id: this.listId,\n    };\n    this.orderList.push(this.localMedicine);\n    console.log(this.orderList);\n    this.rate = \"\";\n    this.quantity = \"\";\n    this.orderQuantity = \"\";\n    this.subTotal =\n      this.subTotal + this.orderList[this.orderList.length - 1].total;\n    console.log(this.subTotal);\n    this.select1.nativeElement.value = \"0\";\n    this.listId = this.listId + 1;\n    this.subTotal = 0;\n    this.orderTotal();\n  }\n\n  orderTotal() {\n    for (let i = 0; i < this.orderList.length; i++) {\n      if (this.orderList[i].total) {\n        this.subTotal = this.subTotal + this.orderList[i].total;\n      }\n    }\n    // this.grandTotal = this.subTotal;\n    // this.gstTotal = this.subTotal;\n  }\n\n  removeItem(id) {\n    this.orderList = this.orderList.filter((orderitem) => id != orderitem.id);\n    this.subTotal = 0;\n    this.orderTotal();\n  }\n\n  submit() {\n    console.log(this.formValues);\n    this.orderserv.postOrders(this.formValues).subscribe((resp) => {\n      this.getOrders();\n    });\n  }\n\n  ngOnDestroy() {}\n\n  reSet() {\n    this.orderForm.reset();\n  }\n\n  toGetPrint(id) {\n    this.router.navigate([]).then((result) => {\n      window.open(`#/orders/${id}`, \"_blank\");\n    });\n  }\n\n  get formValues() {\n    return {\n      orderDate: this.orderDate,\n      customerName: this.customerName,\n      customerContact: this.customerContact,\n      orderedItem: this.orderList,\n      subTotal: this.subTotal,\n      gstRate: this.gstRate,\n      gstAmount: this.gstAmount,\n      discount: this.disAmount,\n      dueAmount: this.dueAmount,\n      paidAmount: this.paidAmount,\n      grandTotal: this.grandTotal,\n      paymentType: this.paymentMethod,\n    };\n  }\n}\n","export default \"<div\\n  bsModal\\n  #largeModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n>\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header card-header\\\">\\n        <h4 class=\\\"modal-title\\\">New Order</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"largeModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <label for=\\\"date-input\\\">Order Date</label>\\n            <input\\n              #orderDateIN\\n              class=\\\"form-control\\\"\\n              id=\\\"date-input\\\"\\n              type=\\\"date\\\"\\n              name=\\\"date-input\\\"\\n              placeholder=\\\"date\\\"\\n              [(ngModel)]=\\\"orderDate\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\n          <div class=\\\"form-group col-md-5\\\">\\n            <label for=\\\"cutomerName\\\">Customer Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"Customer Name\\\"\\n              [(ngModel)]=\\\"customerName\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group col-md-5\\\">\\n            <label for=\\\"customerContact\\\">Contact</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"customerContact\\\"\\n              placeholder=\\\"Contact\\\"\\n              [(ngModel)]=\\\"customerContact\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"table\\\" style=\\\"border-bottom: 2px solid grey\\\">\\n          <table class=\\\"table table-striped\\\">\\n            <thead>\\n              <tr>\\n                <th>Product</th>\\n                <th>Rate</th>\\n                <th>Available Quantity</th>\\n                <th>Quantity</th>\\n                <th>Total</th>\\n                <th>Add</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>\\n                  <div class=\\\"form-group\\\">\\n                    <!-- <ng-select\\n                    #select1\\n                    name=\\\"select1\\\" \\n                    class=\\\"form-control\\\"\\n                    (change)=\\\"onChange($event)\\\"\\n                    >\\n                      <ng-option  *ngFor=\\\"let medicine of medicines\\\"  [value]=\\\"medicine?._id\\\">\\n                        {{ medicine?.productName }}\\n                      </ng-option>\\n                   </ng-select> -->\\n\\n                    <select\\n                      #select1\\n                      name=\\\"select1\\\"\\n                      class=\\\"form-control\\\"\\n                      (change)=\\\"onChange($event)\\\"\\n                    >\\n                      <option value=\\\"0\\\">Select Medicine</option>\\n                      <option\\n                        [value]=\\\"medicine?._id\\\"\\n                        *ngFor=\\\"let medicine of medicines\\\"\\n                      >\\n                        {{ medicine?.productName }}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </td>\\n                <td>\\n                  <div class=\\\"form-group\\\">\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      disabled\\n                      [(ngModel)]=\\\"rate\\\"\\n                    />\\n                  </div>\\n                </td>\\n                <td>\\n                  <div class=\\\"form-group\\\">\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      disabled\\n                      [(ngModel)]=\\\"quantity\\\"\\n                    />\\n                  </div>\\n                </td>\\n                <td>\\n                  <div class=\\\"form-group\\\">\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"orderQuantity\\\"\\n                    />\\n                  </div>\\n                </td>\\n                <td>\\n                  <div class=\\\"form-group\\\">\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      disabled\\n                      [(ngModel)]=\\\"total\\\"\\n                    />\\n                  </div>\\n                </td>\\n                <td>\\n                  <Button class=\\\"btn btn-success\\\" (click)=\\\"onAdd()\\\"\\n                    ><span class=\\\"cil-plus\\\"></span\\n                  ></Button>\\n                </td>\\n              </tr>\\n              <tr *ngFor=\\\"let orderitem of orderList\\\">\\n                <td>{{ orderitem?.medicine }}</td>\\n                <td>{{ orderitem?.rate }}</td>\\n                <td></td>\\n                <td>{{ orderitem?.orderQuantity }}</td>\\n                <td>{{ orderitem?.total }}</td>\\n                <td>\\n                  <button\\n                    class=\\\"btn btn-danger\\\"\\n                    (click)=\\\"removeItem(orderitem?.id)\\\"\\n                  >\\n                    <span class=\\\"cil-trash\\\"></span>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"subtotal\\\">Sub Total</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"subtotal\\\"\\n                disabled\\n                [(ngModel)]=\\\"subTotal\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"gst\\\">GST</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"gst\\\"\\n                placeholder=\\\"GST %\\\"\\n                [(ngModel)]=\\\"gstRate\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"total\\\">Total</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"total\\\"\\n                disabled\\n                [(ngModel)]=\\\"gstTotal\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"discount\\\">Discount (in %)</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"discount\\\"\\n                placeholder=\\\"Discount %\\\"\\n                [(ngModel)]=\\\"discount\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"grandtotal\\\">Grand Total</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"grangtotal\\\"\\n                disabled\\n                [(ngModel)]=\\\"grandTotal\\\"\\n              />\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"paidamount\\\">Paid Amount</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"paidamount\\\"\\n                placeholder=\\\"Amount\\\"\\n                [(ngModel)]=\\\"paidAmount\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"dueamount\\\">Due Amount</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"dueamount\\\"\\n                disabled\\n                [(ngModel)]=\\\"dueAmount\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"paymentType\\\">Payment Type</label>\\n              <select\\n                id=\\\"select1\\\"\\n                name=\\\"select1\\\"\\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"paymentMethod\\\"\\n              >\\n                <option value=\\\"0\\\">Please select</option>\\n                <option value=\\\"Cash\\\">Cash</option>\\n                <option value=\\\"Card\\\">Card</option>\\n                <option value=\\\"UPI\\\">UPI</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button\\n          type=\\\"submit\\\"\\n          class=\\\"btn btn-primary col-md-3\\\"\\n          (click)=\\\"submit()\\\"\\n        >\\n          <i class=\\\"fa fa-dot-circle-o\\\"></i> Submit\\n        </button>\\n        <button type=\\\"reset\\\" class=\\\"btn btn-danger col-md-3\\\">\\n          <i class=\\\"fa fa-ban\\\"></i> Reset\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary col-md-3\\\"\\n          (click)=\\\"largeModal.hide()\\\"\\n        >\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<!-- /.modal -->\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <h6>Order datails</h6>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"header row\\\" style=\\\"margin-bottom: 20px\\\">\\n      <div class=\\\"input-group col-md-3\\\">\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"input1-group2\\\"\\n          name=\\\"input1-group2\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"Search Orders\\\"\\n          [(ngModel)]=\\\"term\\\"\\n        />\\n        <span class=\\\"input-group-append\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-pill\\\">\\n            <i class=\\\"fa fa-search\\\"></i> Search\\n          </button>\\n        </span>\\n      </div>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-pill btn-secondary mr-1 col-md-3\\\"\\n        data-toggle=\\\"modal\\\"\\n        (click)=\\\"largeModal.show()\\\"\\n      >\\n        New Order\\n      </button>\\n    </div>\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th>S.No.</th>\\n          <th>Invoice Id</th>\\n          <th>Order Date</th>\\n          <th>Customer Name</th>\\n          <th>Contact</th>\\n          <th>Payment status</th>\\n          <th>update</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let order of orders | filter:term; let i = index\\\">\\n          <td>{{ i + 1 }}</td>\\n          <td>{{order?.invoiceId}}</td>\\n          <td>{{ order?.createdAt | amDateFormat: \\\"DD/MM/YYYY\\\" }}</td>\\n          <td>{{ order?.customerName }}</td>\\n          <td>{{ order?.customerContact }}</td>\\n          <td>{{ order?.paymentType }}</td>\\n          <td>\\n            <div class=\\\"update row\\\">\\n              <button\\n              class=\\\"btn btn-sm btn-secondary btn-pill\\\"\\n              (click)=\\\"toGetPrint(order?._id)\\\"\\n            >\\n              Print\\n            </button>\\n              <button\\n                class=\\\"btn btn-sm btn-danger btn-pill\\\"\\n                (click)=\\\"deleteOrder(order?._id)\\\"\\n              >\\n                <span class=\\\"cil-trash\\\"></span>\\n              </button>\\n\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <ul class=\\\"pagination\\\">\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n      <li class=\\\"page-item active\\\">\\n        <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n      </li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n      <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n    </ul>\\n  </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRlcnMuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule, ViewChild } from '@angular/core';\nimport { OrdersComponent} from './orders.component';\nimport { OrdersRoutingModule } from './orders-routing.module';\nimport { ModalDirective, ModalModule } from 'ngx-bootstrap/modal';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MomentModule } from 'angular2-moment';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n@NgModule({\n  imports: [\n    OrdersRoutingModule,\n    ModalModule,\n    HttpClientModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MomentModule,\n    Ng2SearchPipeModule,\n    NgSelectModule\n\n\n  ],\n  declarations: [ OrdersComponent ]\n})\nexport class OrdersModule { \n  @ViewChild('largeModal') public largeModal: ModalDirective;\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrdersComponent } from './orders.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrdersComponent,\n    data: {\n      title: 'Orders'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrdersRoutingModule {}"],"sourceRoot":"webpack:///"}